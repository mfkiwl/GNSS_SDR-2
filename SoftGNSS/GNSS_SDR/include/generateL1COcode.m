function L1COcode = generateL1COcode(PRN)
% generateL1COcode.m generates one of the 32 GPS satellite L1CO codes.
%
% L1COcode = generateL1COcode(PRN)
%
%   Inputs:
%       PRN         - PRN number of the sequence.
%
%   Outputs:
%       L1COcode    - a vector containing the desired L1CO code sequence 
%                   (chips).  
%--------------------------------------------------------------------------
%This program is free software; you can redistribute it and/or
%modify it under the terms of the GNU General Public License
%as published by the Free Software Foundation; either version 2
%of the License, or (at your option) any later version.
%
%This program is distributed in the hope that it will be useful,
%but WITHOUT ANY WARRANTY; without even the implied warranty of
%MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%GNU General Public License for more details.
%
%You should have received a copy of the GNU General Public License
%along with this program; if not, write to the Free Software
%Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
%USA.
%--------------------------------------------------------------------------

%------- The code depends on the PRN number -------
s1poly=[ %%/* S1 Polynomial Coefficient (Octal) */ ...
     5111 , 5421 , 5501 , 5403 , 6417 , 6141 , 6351 , 6501 , 6205 , 6235 , ...%/*   1- 10 */
     7751 , 6623 , 6733 , 7627 , 5667 , 5051 , 7665 , 6325 , 4365 , 4745 , ...%/*  11- 20 */
     7633 , 6747 , 4475 , 4225 , 7063 , 4423 , 6651 , 4161 , 7237 , 4473 , ...%/*  21- 30 */
     5477 , 6163 , 7223 , 6323 , 7125 , 7035 , 4341 , 4353 , 4107 , 5735 , ...%/*  31- 40 */
     6741 , 7071 , 4563 , 5755 , 6127 , 4671 , 4511 , 4533 , 5357 , 5607 , ...%/*  41- 50 */
     6673 , 6153 , 7565 , 7107 , 6211 , 4321 , 7201 , 4451 , 5411 , 5141 , ...%/*  51- 60 */
     7041 , 6637 , 4577 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , ...%/*  61- 70 */
     5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , ...%/*  71- 80 */
     5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , ...%/*  81- 90 */
     5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5111 , 5421 , ...%/*  91-100 */
     5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , ...%/* 101-110 */
     5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , ...%/* 111-120 */
     5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , ...%/* 121-130 */
     5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5421 , 5403 , 5403 , ...%/* 131-140 */
     5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , ...%/* 141-150 */
     5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , ...%/* 151-160 */
     5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , ...%/* 161-170 */
     5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , ...%/* 171-180 */
     5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , ...%/* 181-190 */
     5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 5403 , 6501 , 6501 , 6501 , ...%/* 191-200 */
     6501 , 6501 , 6501 , 6501 , 6501 , 6501 , 6501 , 6501 , 6501 , 6501   ...%/* 201-210 */
    ];

s1init=[ ...%/* S1 Initial Condition (Octal) */
     3266 , 2040 , 1527 , 3307 , 3756 , 3026 , 0562 , 0420 , 3415 , 0337 , ...%/*   1- 10 */
     0265 , 1230 , 2204 , 1440 , 2412 , 3516 , 2761 , 3750 , 2701 , 1206 , ...%/*  11- 20 */
     1544 , 1774 , 0546 , 2213 , 3707 , 2051 , 3650 , 1777 , 3203 , 1762 , ...%/*  21- 30 */
     2100 , 0571 , 3710 , 3535 , 3110 , 1426 , 0255 , 0321 , 3124 , 0572 , ...%/*  31- 40 */
     1736 , 3306 , 1307 , 3763 , 1604 , 1021 , 2624 , 0406 , 0114 , 0077 , ...%/*  41- 50 */
     3477 , 1000 , 3460 , 2607 , 2057 , 3467 , 0706 , 2032 , 1464 , 0520 , ...%/*  51- 60 */
     1766 , 3270 , 0341 , 1740 , 3664 , 1427 , 2627 , 0701 , 3460 , 1373 , ...%/*  61- 70 */
     2540 , 2004 , 2274 , 1340 , 0602 , 2502 , 0327 , 2600 , 0464 , 3674 , ...%/*  71- 80 */
     3040 , 1153 , 0747 , 1770 , 3772 , 1731 , 1672 , 1333 , 2705 , 2713 , ...%/*  81- 90 */
     3562 , 3245 , 3770 , 3202 , 3521 , 3250 , 2117 , 0530 , 3021 , 2511 , ...%/*  91-100 */
     1562 , 1067 , 0424 , 3402 , 1326 , 2142 , 0733 , 0504 , 1611 , 2724 , ...%/* 101-110 */
     0753 , 3724 , 2652 , 1743 , 0013 , 3464 , 2300 , 1334 , 2175 , 2564 , ...%/* 111-120 */
     3075 , 3455 , 3627 , 0617 , 1324 , 3506 , 2231 , 1110 , 1271 , 3740 , ...%/* 121-130 */
     3652 , 1644 , 3635 , 3436 , 3076 , 0434 , 3340 , 0054 , 2446 , 0025 , ...%/* 131-140 */
     0150 , 2746 , 2723 , 2601 , 3440 , 1312 , 0544 , 2062 , 0176 , 3616 , ...%/* 141-150 */
     1740 , 3777 , 0432 , 2466 , 1667 , 3601 , 2706 , 2022 , 1363 , 2331 , ...%/* 151-160 */
     3556 , 2205 , 3734 , 2115 , 0010 , 2140 , 3136 , 0272 , 3264 , 2017 , ...%/* 161-170 */
     2505 , 3532 , 0647 , 1542 , 2154 , 3734 , 2621 , 2711 , 0217 , 3503 , ...%/* 171-180 */
     3457 , 3750 , 2525 , 0113 , 0265 , 1711 , 0552 , 0675 , 1706 , 3513 , ...%/* 181-190 */
     1135 , 0566 , 0500 , 0254 , 3445 , 2542 , 1257 , 0211 , 0534 , 1420 , ...%/* 191-200 */
     3401 , 0714 , 0613 , 2475 , 2572 , 3265 , 1250 , 1711 , 2704 , 0135   ...%/* 201-210 */
    ];

s2init =[ ...%/* S2 Initial Condition (Octal) */
     0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , ...%/*   1- 10 */
     0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , ...%/*  11- 20 */
     0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , ...%/*  21- 30 */
     0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , ...%/*  31- 40 */
     0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , ...%/*  41- 50 */
     0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , 0000 , ...%/*  51- 60 */
     0000 , 0000 , 0000 , 3035 , 1557 , 0237 , 2527 , 3307 , 1402 , 1225 , ...%/*  61- 70 */
     0607 , 0351 , 3724 , 1675 , 2625 , 1030 , 1443 , 3277 , 1132 , 0572 , ...%/*  71- 80 */
     1241 , 0535 , 1366 , 0041 , 0561 , 0122 , 1205 , 3753 , 2543 , 3031 , ...%/*  81- 90 */
     2260 , 3773 , 3156 , 2215 , 0146 , 2413 , 2564 , 3310 , 2267 , 3120 , ...%/*  91-100 */
     0064 , 1042 , 0476 , 1020 , 0431 , 0216 , 2736 , 2527 , 2431 , 1013 , ...%/* 101-110 */
     0524 , 0726 , 1042 , 3362 , 1364 , 3354 , 0623 , 0145 , 0214 , 0223 , ...%/* 111-120 */
     0151 , 2405 , 2522 , 3235 , 0452 , 2617 , 1300 , 1430 , 0773 , 0772 , ...%/* 121-130 */
     3561 , 0607 , 0420 , 0527 , 3770 , 2536 , 2233 , 3366 , 3766 , 3554 , ...%/* 131-140 */
     2060 , 2070 , 0713 , 3366 , 3247 , 2776 , 1244 , 2102 , 1712 , 1245 , ...%/* 141-150 */
     3344 , 1277 , 0165 , 2131 , 3623 , 0141 , 0421 , 3032 , 2065 , 3024 , ...%/* 151-160 */
     2663 , 2274 , 2114 , 1664 , 0413 , 1512 , 0135 , 2737 , 1015 , 1075 , ...%/* 161-170 */
     1255 , 3473 , 2716 , 0101 , 1105 , 1407 , 3407 , 1046 , 3237 , 0154 , ...%/* 171-180 */
     3010 , 2245 , 2051 , 2144 , 1743 , 2511 , 3410 , 1414 , 1275 , 2257 , ...%/* 181-190 */
     2331 , 0276 , 3261 , 1760 , 0430 , 3477 , 1676 , 1636 , 2411 , 1473 , ...%/* 191-200 */
     2266 , 2104 , 2070 , 1766 , 0711 , 2533 , 0353 , 1744 , 0053 , 2222   ...%/* 201-210 */
];

R1o = oct2poly(s1init(PRN),'ascending')*(-2)+1;   %/* S1 Initial Condition */
R2o = oct2poly(s2init(PRN),'ascending')*(-2)+1;   %/* S2 Initial Condition (prn>=64) */
T1o = oct2poly(s1poly(PRN),'ascending')*(-2)+1;   %/* S1 Polynomial Coefficient */
T2o = oct2poly(5001,'ascending')*(-2)+1;   %/* S2 Polynomial Coefficient (Constant) */

R1 = ones(1,11); R1(1:length(R1o)) = R1o; 
R2 = ones(1,11); R2(1:length(R2o)) = R2o;  
T1 = ones(1,11); T1(1:length(T1o)-1) = T1o(2:end);  
T2 = ones(1,11); T2(1:length(T2o)-1) = T2o(2:end); 
    
T1(11)=-1; %/* last tap is always 1 */
T2(11)=-1; %/* last tap is always 1 */

R1 = R1(1:11);
R2 = R2(1:11);
T1 = T1(1:11);
T2 = T2(1:11);

for i=1:1800
    S1(i)=R1(11);
    S2(i)=R2(11);
    
    C1 =1; C2 = 1;
    for j=1:11
        if (T1(j)==-1)
            C1 = C1*R1(j);
        end
        if (T2(j)==-1)
            C2 = C2*R2(j);
        end
    end
    
    R1(2:end) = R1(1:end-1);
    R2(2:end) = R2(1:end-1);
    
    R1(1) = C1;
    R2(1) = C2;
    
    if (PRN>=64)
        L1COcode(i)=-S1(i)*S2(i);
    else
        L1COcode(i)=-S1(i);
    end
end